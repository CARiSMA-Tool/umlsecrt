#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#abstract #rule AbstractMethodDefinition #with org.gravity.tgg.modisco.pm

#source {
	mSignature:MMethodSignature {
		++  -mDefinitions -> mDefinition
	}

	++mDefinition:MAbstractMethodDefinition
}

#target {
	tMethodSignature:TMethodSignature {
		++  -definitions -> tDefinition
	}
	
	++tDefinition:TMethodDefinition
}

#correspondence {
	++ mDefinitionToTMember :MDefinitionToTMember {
		#src->mDefinition
		#trg->tDefinition
	}

	++mFlowElementToTFlowElement:MAbstractFlowElementToTAbstractFlowElement {
		#src->mDefinition
		#trg->tDefinition
	}

	mSignatureToTMethodSignature :MSignatureToTSignature {
		#src->mSignature
		#trg->tMethodSignature
	}

	++ mBodyToTAnnotation :ASTNodeToTAnnotatable {
		#src->mDefinition
		#trg->tDefinition
	}
}

#using org.gravity.tgg.modisco.pm.*

#abstract #rule MethodDefinition #extends AbstractMethodDefinition
#with org.gravity.tgg.modisco.pm

#source {
	++mDefinition:MMethodDefinition {
		++-returnType->mTypeAccess
	}
	++mTypeAccess:TypeAccess {
		++-type->mType
	}
	mType:Type
}

#target {
	++tDefinition: TMethodDefinition {
		++-returnType->tType
	}
	
	tType:TAbstractType
}

#correspondence{
	mTypeToTType : TypeToTAbstractType {
		#src->mType
		#trg->tType
	}
}

#using org.gravity.tgg.modisco.pm.*

#rule MethodDefinitionReturnSingle #extends MethodDefinition
#with org.gravity.tgg.modisco.pm

#target {
	++tDefinition: TMethodDefinition {
		lowerBound:=0
		upperBound:=1
	}
}

#using org.gravity.tgg.modisco.pm.*

#rule MethodDefinitionReturnArray #extends MethodDefinition
#with org.gravity.tgg.modisco.pm

#source{
	mType:ArrayType
}

#target {
	++tDefinition: TMethodDefinition {
		lowerBound:=0
		upperBound:=-1
	}
}

#rule ConstructorDefinition #extends AbstractMethodDefinition
#with org.gravity.tgg.modisco.pm

#source {
	++mDefinition:MConstructorDefinition 
}

#target {
	++tDefinition:TMethodDefinition {
		++-tAnnotation -> tAnnotation
	}

	++tAnnotation:TConstructor
}


