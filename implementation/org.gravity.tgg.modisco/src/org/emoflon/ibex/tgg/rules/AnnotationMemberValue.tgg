#using org.gravity.tgg.modisco.*
#using AttrCondDefLibrary.*

#abstract #rule AnnotationMemberValue #with org.gravity.tgg.modisco

#source {
	AnnotationValue:AnnotationMemberValuePair {
		++ -value -> mValue
	}

	++mValue:Expression
}

#target {
	tAnnotationValue:TAnnotationValue
}

#correspondence {
	AnnotationMemberValuePairToTAnnotationValue :AnnotationMemberValuePairToTAnnotationValue {
		#src->AnnotationValue
		#trg->tAnnotationValue
	}
}

#rule AnnotationMemberValueAnnotation #extends AnnotationMemberValue #with org.gravity.tgg.modisco

#source {
	++mValue:Annotation
}

#target {
	tAnnotationValue:TAnnotationValue {
		++ -tValue -> tValue
	}

	++tValue:TAnnotation
}

#correspondence {
	++ mTypeToTType :AnnotationToTAnnotation {
		#src->mValue
		#trg->tValue
	}
}

#rule AnnotationMemberValueBoolean #extends AnnotationMemberValue #with org.gravity.tgg.modisco

#source {
	++mValue:BooleanLiteral
}

#target {
	tAnnotationValue:TAnnotationValue {
		++ -tValue -> tValue
	}

	++tValue:TBoolNode
}

#correspondence {
	++ mValueToTValue :BooleanLiteralToTBoolNode {
		#src->mValue
		#trg->tValue
	}
}

#attributeConditions {
	eq_boolean(mValue.value, tValue.value)
}

#rule AnnotationMemberValueClass #extends AnnotationMemberValue #with org.gravity.tgg.modisco

#source {
	++mValue:TypeLiteral {
		++ -type -> mAccess
	}

	++mAccess:TypeAccess {
		++ -type -> mType
	}

	mType:Type
}

#target {
	tAnnotationValue:TAnnotationValue {
		++ -tValue -> tValue
	}

	++tValue:TClassNode {
		++ -tClass -> tType
	}

	tType:TAbstractType
}

#correspondence {
	++ mValueToTValue :ClassLiteralToClassNode {
		#src->mValue
		#trg->tValue
	}

	mTypeToTType :TypeToTAbstractType {
		#src->mType
		#trg->tType
	}
}

#rule AnnotationMemberValueNumber #extends AnnotationMemberValue #with org.gravity.tgg.modisco

#source {
	++mValue:NumberLiteral
}

#target {
	tAnnotationValue:TAnnotationValue {
		++ -tValue -> tValue
	}

	++tValue:TNumberNode
}

#correspondence {
	++ mTypeToTType :NumberLiteralToTNumberNode {
		#src->mValue
		#trg->tValue
	}
}

#attributeConditions {
	eq_string(mValue.tokenValue, tValue.tNumber)
}

#rule AnnotationMemberValueString #extends AnnotationMemberValue #with org.gravity.tgg.modisco

#source {
	++mValue:StringLiteral
}

#target {
	tAnnotationValue:TAnnotationValue {
		++ -tValue -> tValue
	}

	++tValue:TTextNode
}

#correspondence {
	++ mTypeToTType :StringLiteralToTTextNode {
		#src->mValue
		#trg->tValue
	}
}

#attributeConditions {
	eq_string(mValue.escapedValue, tValue.tText)
}


