#using org.gravity.tgg.modisco.*
#using AttrCondDefLibrary.*

#abstract #rule MethodSignature
#with org.gravity.tgg.modisco

#source {
	mName:MMethodName {
		++  -mSignatures -> mSignature
	}

	++mSignature:MMethodSignature{
		++  -returnType -> mType
	}

	mType:Type
}

#target {
	tName:TMethod {
		++-signatures -> tSignature
	}

	++tSignature:TMethodSignature {
		++  -returnType -> tType
	}

	tType:TAbstractType
}

#correspondence {
	mNameToTName :MMethodNameToTMethod {
		#src->mName
		#trg->tName
	}

	++ mSignatureToTSignature :MSignatureToTSignature {
		#src->mSignature
		#trg->tSignature
	}

	++mFlowElementToTFlowElement:MAbstractFlowElementToTAbstractFlowElement {
		#src->mSignature
		#trg->tSignature
	}
}

#rule MethodSignatureSingleReturn #extends MethodSignature
#with org.gravity.tgg.modisco

#source {
	mType:Type
}

#target {
	++tSignature:TMethodSignature {
		lowerBound:=0
		upperBound:=1
	}

	tType:TAbstractType
}

#correspondence {
	mTypeToTType :org.gravity.tgg.modisco.TypeToTAbstractType {
		#src->mType
		#trg->tType
	}
}

#rule MethodSignatureArrayReturn #extends MethodSignature
#with org.gravity.tgg.modisco

#source {
	mType:ArrayType {
		-elementType -> mTypeAccess
	}

	mTypeAccess:TypeAccess {
		-type -> mTypeOfArray
	}

	mTypeOfArray:Type
}

#target {
	++tSignature:TMethodSignature {
		lowerBound:=0
		upperBound:=-1
	}

	tType:TAbstractType
}

#correspondence {
	mTypeToTType :org.gravity.tgg.modisco.TypeToTAbstractType {
		#src->mTypeOfArray
		#trg->tType
	}
}


