#using org.gravity.tgg.modisco.*
#using AttrCondDefLibrary.*

#rule Constructor
#with org.gravity.tgg.modisco

#source {
	++ eConstructorDeclaration : MConstructorDefinition {
		++ -mParameterList-> mParameterList
	}
	++ mParameterList : MParameterList {
	}
	mModel : MGravityModel {
		++  -mConstructorDefinitions -> eConstructorDeclaration
	}
}

#target {
	typeGraph : TypeGraph {
		++  -methods -> tName
	}
	++ tName : TConstructorName {
	}
	++ tConstructorDef : TConstructorDefinition {
	}
	++ tParameterList : TParameterList {
	}
	++ tSig : TConstructorSignature {
		++  -paramList -> tParameterList
		++  -definitions -> tConstructorDef
		++  -method -> tName
	}
}

#correspondence {
	++ mBodyToTAnnotation : ASTNodeToTAnnotatable {
		#src->eConstructorDeclaration
		#trg->tConstructorDef
	}
	++ eConstructorDeclarationToTConstructorDef : MDefinitionToTMember {
		#src->eConstructorDeclaration
		#trg->tConstructorDef
	}
	++ eConstructorDeclarationToTSig : ConstructorDeclarationToTMethodSignature {
		#src->eConstructorDeclaration
		#trg->tSig
	}
	mModelToTypeGraph : ModelToTypeGraph {
		#src->mModel
		#trg->typeGraph
	}
	++ eConstructorDeclarationToTParameterList : MConstructorDefinitionToTParameterList {
		#src->eConstructorDeclaration
		#trg->tParameterList
	}
	++ eConstructorDeclarationToTName : ConstructorDeclarationToTMethod {
		#src->eConstructorDeclaration
		#trg->tName
	}
	++ mParameterListToTParameterList : MParameterListToTParameterList {
		#src->mParameterList
		#trg->tParameterList
	}
}

#attributeConditions {
	eq(eConstructorDeclaration.name, tName.tName)
}