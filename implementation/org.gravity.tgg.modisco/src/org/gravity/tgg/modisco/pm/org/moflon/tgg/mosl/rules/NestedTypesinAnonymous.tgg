#using org.gravity.tgg.modisco.pm.*
#using AttrCondDefLibrary.*

#abstract #rule NestedTypesInAnonymous
#with org.gravity.tgg.modisco.pm

#source {
	eAnonymousClassDeclaration:AnonymousClassDeclaration

	++mNestedType:AbstractTypeDeclaration {
		++  -anonymousClassDeclarationOwner -> eAnonymousClassDeclaration
	}
}

#target {
	tClass:TClass {
		++-innerTypes -> tNestedType
	}

	pg:TypeGraph {
		-classes -> tClass
		-ownedTypes -> tClass
		++  -ownedTypes -> tNestedType
	}

	++tNestedType:TAbstractType
}

#correspondence {
	++ mNestedTypeToTNestedType :TypeToTAbstractType {
		#src->mNestedType
		#trg->tNestedType
	}

	eAnonymousClassDeclarationToTClass :AnonymousClassDeclarationToTClass {
		#src->eAnonymousClassDeclaration
		#trg->tClass
	}

	++ mbodyToTAnnotatable :ASTNodeToTAnnotatable {
		#src->mNestedType
		#trg->tNestedType
	}
}

#attributeConditions {
	eq(mNestedType.name, tNestedType.tName)

	eq(mNestedType.proxy, tNestedType.tLib)
}


