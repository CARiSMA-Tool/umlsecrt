
import org.gravity.typegraph.basic.TVisibility;
import org.gravity.typegraph.basic.TDeclaredEntity;
import java.util.Collections;
import org.gravity.typegraph.basic.TPackage;

partial class TMemberEntityImpl {

@members <--

	private boolean sameClass(TDeclaredEntity entity) {
		if (entity instanceof TMemberEntityImpl) {
			TDeclaredEntity otherParent = ((TMemberEntityImpl) entity).getParent();
			TDeclaredEntity thisParent = this.getParent();
			if(otherParent != null && thisParent != null){
				return this.getParent().equals(otherParent);
			}
		}
		return false;
	}

	private boolean samePackage(TDeclaredEntity entity) {
		TPackage otherPackage = entity.getPackage();
		TPackage thisPackage = this.getPackage();
		if(otherPackage != null && thisPackage != null){
			return thisPackage.equals(otherPackage);
		}
		return false;
	}

	private boolean sameSuperClass(TDeclaredEntity entity) {
		return !Collections.disjoint(this.getParents(), entity.getParents());
	}

	@Override
	public TVisibility getMinimumRequiredVisibility(TDeclaredEntity entity) {

		if (sameClass(entity)) {
			return TVisibility.TPRIVATE;
		}
		if (samePackage(entity)) {
			return TVisibility.TPACKAGE;
		}
		if (sameSuperClass(entity)) {
			return TVisibility.TPROTECTED;
		}
		return TVisibility.TPUBLIC;

	}
	
-->

}