
import java.util.LinkedList;
import java.util.List;
import org.gravity.typegraph.basic.TMethodSignature;

partial class TAbstractTypeImpl {

@members <--

	public TMethodSignature getMethodSignature(String methodSignatureName) {
		String voidString = ":void";
		for (TSignature sig : getSignature()) {
			if (sig instanceof TMethodSignature) {
				String sigString = sig.getSignatureString().replaceAll(" ", "");

				if (sigString.endsWith(voidString)) {
					sigString = sigString.substring(0, sigString.length() - voidString.length());
				}
				String methodSigString = methodSignatureName.replaceAll(" ", "");
				if (methodSigString.endsWith(voidString)) {
					methodSigString = methodSigString.substring(0, methodSigString.length() - voidString.length());
				}
				if (sigString.equals(methodSigString)) {
					return (TMethodSignature) sig;
				}
			}
		}
		return null;
	}
	
-->

@model getFullyQualifiedName () <--

		StringBuilder builder = new StringBuilder();
		List<String> packages = new LinkedList<>();
		TPackage tPackage = getPackage();
		if (!"(default package)".equals(tPackage.getTName())) {
			while (tPackage != null) {
				packages.add(0, tPackage.getTName());
				tPackage = tPackage.getParent();
			}
			for (String name : packages) {
				builder.append(name);
				if (name.length() > 0 && !name.endsWith("$") && !name.endsWith("$1")) { //$NON-NLS-1$ //$NON-NLS-2$
					builder.append('.');
				}
			}
		}
		builder.append(getTName());
		return builder.toString();
-->

}