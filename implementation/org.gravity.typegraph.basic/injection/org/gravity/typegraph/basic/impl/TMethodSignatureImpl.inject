
import org.gravity.typegraph.basic.TParameter;

partial class TMethodSignatureImpl {

@members <--

	@Override
	public String toString() {
		// TODO Auto-generated method stub
		String string = super.toString();
		String name = getMethod().getTName();
		return string.substring(0, string.length() - 1).concat(", name: ").concat(name).concat(")");
	}
	
-->

@model getSignatureString () <--

		String s = getMethod().getTName() + "(";
		TParameter current = getParamList().getFirst();
		while (current != null) {
			s += current.getType().getTName();
			current = current.getNext();
			if (current != null) {
				s += ", ";
			}
		}
		TAbstractType ret = getReturnType();
		if (ret == null) {
			return s + ")";
		} else {
			return s + "):" + ret.getTName();
		}
-->

}