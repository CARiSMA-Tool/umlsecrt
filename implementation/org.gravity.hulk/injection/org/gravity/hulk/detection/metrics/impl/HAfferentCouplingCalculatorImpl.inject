
import java.util.ArrayList;
import org.gravity.typegraph.basic.TAbstractType;
import org.gravity.typegraph.basic.TAccess;
import org.gravity.typegraph.basic.TMember;

partial class HAfferentCouplingCalculatorImpl {

@members <--

	@Override
	public String getGuiName() {
		return "Afferent Coupling";
	}
	
-->

@model calculateValue (TClass tClass) <--

		ArrayList<TAbstractType> accessingClasses = new ArrayList<TAbstractType>();
		for (TMember m : tClass.getDefines()) {
			for (TAccess t : m.getAccessedBy()) {
				TMember tSource = t.getTSource();
				if(tSource == null){
					System.out.println("Member within Class " +tClass.getTName()+" was accessed without an TAccess Source");
					continue;
				}
				TAbstractType definingClass = tSource.getDefinedBy();
				if(definingClass == null){
					System.out.println("Member within Class " +tClass.getTName()+" was accessed by a Source without defining Class");
					continue;
				}
				if (!tSource.getDefinedBy().equals(tClass) && !accessingClasses.contains(tSource.getDefinedBy())) {
					accessingClasses.add(definingClass);
				}
			}

		}
		return accessingClasses.size();
-->

}