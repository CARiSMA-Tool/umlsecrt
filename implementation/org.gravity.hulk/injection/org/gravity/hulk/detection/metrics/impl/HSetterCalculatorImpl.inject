
import org.gravity.typegraph.basic.TMember;
import org.gravity.typegraph.basic.TMethod;
import org.gravity.typegraph.basic.TMethodSignature;
import org.gravity.typegraph.basic.impl.TMethodDefinitionImpl;

partial class HSetterCustomCalculatorImpl {

@members <--

	public String getGuiName() {
		return "Number of setter Methods";
	}
	
-->

@model calculateValue (TClass tClass) <--

		if (tClass == null || tClass.isTLib()) {
			return 0;
		}

		int i = 0;
		for (TMember m : tClass.getDefines()) {
			if (m instanceof TMethodDefinitionImpl) {
				TMethodSignature sig = ((TMethodDefinitionImpl) m).getSignature();
				if (sig == null) {
					//System.out.println("Method within Class " + tClass.getTName() + " does not have a signature");
					continue;
				}
				TMethod method = sig.getMethod();
				if (method == null) {
					//System.out.println(
							//"MethodSignature of a Method in Class " + tClass.getTName() + " does not have a TMethod");
					continue;
				}
				String name = method.getTName();
				if (name.toLowerCase().startsWith("set")) {
					i++;
				}
			}
		}
		i += calculateValue(tClass.getParentClass());

		return i;
-->

}