
import org.gravity.typegraph.basic.TAbstractType;
import org.gravity.typegraph.basic.TAccess;
import org.gravity.typegraph.basic.TMember;
import org.gravity.typegraph.basic.impl.TMethodDefinitionImpl;
import java.util.ArrayList;

partial class HIncommingInvocationCustomCalculatorImpl {

@members <--

	@Override
	public String getGuiName() {
		return "Incomming Invocation custom";
	}
	
-->

@model calculateValue (TClass tClass) <--

		int invoc = 0;
		ArrayList<TMember> invocingMethods = new ArrayList<TMember>();
		for (TMember m : tClass.getDefines()) {
			if (m instanceof TMethodDefinitionImpl) {
				for (TAccess t : m.getAccessedBy()) {
					TMember tSource = t.getTSource();
					if (tSource == null) {
						//System.out.println(
								//"Method within Class " + tClass.getTName() + " was accessed without an Access Source");
						continue;
					}
					TAbstractType definingClass = tSource.getDefinedBy();
					if (definingClass == null) {
						//System.out.println("Method within Class " + tClass.getTName()
								//+ " was accessed by a Source without defining Class");
						continue;
					}
					if (!definingClass.equals(tClass) && !invocingMethods.contains(tSource)) {

						invocingMethods.add(tSource);
						invoc++;

					}
				}
			}
		}
		return invoc;
-->

}