
import org.gravity.typegraph.basic.TAccess;
import org.gravity.typegraph.basic.TClass;
import org.gravity.typegraph.basic.TFieldDefinition;
import org.gravity.typegraph.basic.TMember;
import java.util.ArrayList;

partial class HLocalFieldUniqueAccessCalculatorImpl {

@members <--

	@Override
	public String getGuiName() {
		return "Number of distinct fields accessed by each method";
	}
	
-->

@model calculateValue (TClass tClass) <--

		int i = 0;
		for (TMember m : tClass.getDefines()) {
			ArrayList<TMember> accessedMembers = new ArrayList<TMember>();
			for (TAccess t : m.getTAccessing()) {
				TMember tTarget = t.getTTarget();
				if (tTarget instanceof TFieldDefinition && tTarget.getDefinedBy().equals(tClass)
						&& !accessedMembers.contains(tTarget)) {
					i++;
					accessedMembers.add(tTarget);
				}
			}
		}
		return i;
-->

}