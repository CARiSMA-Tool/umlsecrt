package malware;

import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Field;
import java.util.Hashtable;
import java.util.Map.Entry;

import passwords.PasswordStore;



public class MaliciousApplication {
	
	public static void main(String[] args) throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, SecurityException {
		PasswordStore store = new PasswordStore();
		store.savePassword("A", "a");
		store.savePassword("B", "b");
		store.savePassword("C", "c");
		
		Hashtable<String, String> readPasswords = new MaliciousApplication().readPasswords(store);
		sendPasswords(readPasswords);
	}
	
	private static void sendPasswords(Hashtable<String, String> readPasswords) {
		try(FileWriter file = new FileWriter("passwords.txt")){
			for(Entry<String, String> entry: readPasswords.entrySet()) {
				file.write("key="+entry.getKey()+" pwd="+entry.getValue());
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public Hashtable<String, String> readPasswords(PasswordStore s) throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, SecurityException {
		Field f = s.getClass().getDeclaredField("table");
		f.setAccessible(true);
		return (Hashtable<String, String>) f.get(s);
	}
}
